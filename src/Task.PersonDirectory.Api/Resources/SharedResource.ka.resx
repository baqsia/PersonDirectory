<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PersonNotFound" xml:space="preserve">
    <value>პერსონა ვერ მოიძებნა</value>
    <comment/>
  </data>
  <data name="CityNotFound" xml:space="preserve">
    <value>ქალაქი ვერ მოიძებნა</value>
    <comment/>
  </data>
  <data name="RelationAdded" xml:space="preserve">
    <value>პიზიკური პირები დაკავშირდნენ წარმატებით</value>
  </data>
  <data name="RelationDropped" xml:space="preserve">
    <value>პიზიკური პირების კავშირი შეწყდა</value>
  </data>
  <data name="RelatedPersonIdMustBeGreaterThanZero" xml:space="preserve">
    <value>დაკავშირებული პირის ID ნულზე მეტი უნდა იყოს.</value>
  </data>
  <data name="PersonCantBeRelatedToThemselves" xml:space="preserve">
    <value>პერსონას არ შეუძლია საკუთარ თავთან იყოს დაკავშირებული</value>
  </data>
  <data name="FirstNameIsRequired" xml:space="preserve">
    <value>სახელი სავალდებულოა</value>
  </data>
  <data name="LastNameIsRequired" xml:space="preserve">
    <value>გვარი სავალდებულოა</value>
  </data>
  <data name="FirstNameRange" xml:space="preserve">
    <value>სახელი უნდა შედგებოდეს 2-დან 50 სიმბოლომდე</value>
  </data>
  <data name="LastNameRange" xml:space="preserve">
    <value>გვარი უნდა შედგებოდეს 2-დან 50 სიმბოლომდე</value>
  </data>
  <data name="FirstNameLettersValidation" xml:space="preserve">
    <value>სახელი უნდა შეიცავდეს მხოლოდ ქართულ ან მხოლოდ ლათინურ ასოებს და არა ორივეს ერთად</value>
  </data>
  <data name="LastNameLettersValidation" xml:space="preserve">
    <value>გვარი უნდა შეიცავდეს მხოლოდ ქართულ ან მხოლოდ ლათინურ ასოებს და არა ორივეს ერთად</value>
  </data>
  <data name="GenderIsRequired" xml:space="preserve">
    <value>სქესი სავალდებულოა</value>
  </data>
  <data name="GenderMustBeMaleOrFemale" xml:space="preserve">
    <value>სქესი უნდა იყოს ან 'მამრობითი' ან 'მდედრობითი'</value>
  </data>
  <data name="CityIdMustBePositive" xml:space="preserve">
    <value>ქალაქის ID უნდა იყოს დადებითი მთელი რიცხვი</value>
  </data>
  <data name="DateOfBirthIsRequired" xml:space="preserve">
    <value>დაბადების თარიღი სავალდებულოა</value>
  </data>
  <data name="MustBeAtLeast18" xml:space="preserve">
    <value>პირი უნდა იყოს მინიმუმ 18 წლის</value>
  </data>
  <data name="PersonalNumberLength" xml:space="preserve">
    <value>პირადი ნომერი ზუსტად 11 ციფრისგან უნდა შედგებოდეს</value>
  </data>
  <data name="PersonalNumberIsRequired" xml:space="preserve">
    <value>პირადი ნომერი მხოლოდ ციფრებისგან უნდა შედგებოდეს</value>
  </data>
  <data name="PersonalNumberDigitsOnly" xml:space="preserve">
    <value>პირადი ნომერი აუცილებელია</value>
  </data>
  <data name="PhoneNumberLengthRange" xml:space="preserve">
    <value>ტელეფონის ნომერი უნდა შედგებოდეს 4-დან 50 სიმბოლომდე</value>
  </data>
  <data name="PhoneNumberIsRequired" xml:space="preserve">
    <value>ტელეფონის ნომერი სავალდებულოა</value>
  </data>
  <data name="PhoneNumberTypeInvalid" xml:space="preserve">
    <value>ტელეფონის ნომრის ტიპი უნდა იყოს „მობილური“, „ოფისი“ ან „სახლი“</value>
  </data>
  <data name="PhoneNumberTypeIsRequired" xml:space="preserve">
    <value>ტელეფონის ნომრის ტიპი სავალდებულოა</value>
  </data>
  <data name="FileIsEmpty" xml:space="preserve">
    <value>ფაილი ცარიელია</value>
  </data>
  <data name="FileIsRequired" xml:space="preserve">
    <value>ფაილი უნდა იყოს მოწოდებული</value>
  </data>
  <data name="ImageMinimumSize" xml:space="preserve">
    <value>სურათის ზომა 2 მბ-ზე ნაკლები უნდა იყოს</value>
  </data>
  <data name="ImageTypesAllowed" xml:space="preserve">
    <value>დაშვებულია მხოლოდ .jpg, .jpeg ან .png ფაილები</value>
  </data>
  <data name="PageSizeMustBeBetween1to100" xml:space="preserve">
    <value>გვერდის ზომა უნდა იყოს 1-დან 100-მდე</value>
  </data>
  <data name="PageMustNotBeNegativeOrZero" xml:space="preserve">
    <value>გვერდის ნომერი 0-ზე მეტი უნდა იყოს</value>
  </data>
  <data name="PersonIdMustBeGreaterThanZero" xml:space="preserve">
    <value>პერსონის ID ნულზე მეტი უნდა იყოს.</value>
  </data>
</root>